@use 'sass:math';
@import 'vars';

/* Simple function to convert pixel value to vw value */
@function calc-vw($pixels, $width: $default-width) {
  @return ($pixels / $width * 100vw);
}

/* Simple function to convert pixel value to vh value */
@function calc-vh($pixels, $height: $default-height) {
  @return ($pixels / $height * 100vh);
}

/* Converts font-size from px to vw, using a base displayWidth (viewport) */
// Function from http://emilolsson.com/tools/vw-unit-calc-an-online-responsive-css-font-size-calculator/
// @params $targetFontSize (REQUIRED) takes in a value in pixels, ex. 16px, 65px, etc.
// @params $displayWidth takes in a number only. ex. 1440, 1920, etc.
@function get-font-vw($targetFontSize, $displayWidth : $default-width) {
  $vw-context: ($displayWidth * 0.01) * 1px;

  @return math.div($targetFontSize, $vw-context) * 1vw;
}

/**
*
*/
@function get-column-width($columns, $total-columns: $default-total-columns) {
  @return ((100% / $total-columns) * $columns);
}

/**
* Division
*/
@function divide($dividend, $divisor) {
  @return math.div($dividend, $divisor);
}

/**
* Convert pixel value to rem
*/
@function px($px) {
  @return $px * 0.1rem;
}

/**
* Use dynamic vh based on windowHeight.
* Check @composables/use-window-resize-listener.js for more information.
*/
@function vh($val: 0) {
  @return calc(#{$val} * var(--vh-val));
}
